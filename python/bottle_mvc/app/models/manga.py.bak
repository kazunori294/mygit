# -*- coding:utf-8 -*-

import app.models.db as db
import app.models.pager as pager

class Manga:

    # ==========================================
    # 
    # マンガ一覧を取得するやーつ
    # 
    # ==========================================

    def load(self, page):

        define_page = 100
        start = (page - 1) * define_page

        result = {}

        sql = "select count(id) as all_count from iplist"
        db.con.execute(sql)
        result = db.con.fetchone()

        result["pagination"] = pager.Pagination(page, define_page, result["all_count"])

        sql = "select * from iplist order by ipaddress"
        sql += ' limit %s, %s'
        db.con.execute(sql, (start, define_page))
        result["iplists"] = db.con.fetchall()

        return result


    # ==========================================
    # 
    # マンガ単品を取得するやーつ
    # 
    # ==========================================
    def edit(self, id):

        sql = "select * from iplist where id = %s"
        db.con.execute(sql, (id))
        return db.con.fetchone()


    # ==========================================
    # 
    # idがあったらdelフラグありで削除、無しで更新、idがなかったら新規追加
    # setdhcpがあれば、DB内dhcpフラグセット＋dhcpd.conf編集
    # deldhcpがあれば、DB内dhcpフラグ解除＋dhcpd.conf編集
    # ==========================================
    def done(self, params):

        if params["id"]:

            if params["del"]:
                sql = "delete from iplist where id = %s"
                db.con.execute(sql, (params["id"]))

	    elseif params["setdhcp"]:
                sql = "update iplist set "
                sql += " ipaddress=%s"
                sql += ",hostname=%s"
                sql += ",macaddress=%s"
                sql += ",vlan=%s"
                sql += ",purpose=%s"
                sql += ",regdate=CURRENT_TIMESTAMP"
                sql += " where id = %s"
                db.con.execute(sql, (
                                        params["ipaddress"],
                                        params["hostname"],
                                        params["macaddress"],
                                        params["vlan"],
                                        params["purpose"],
                                        params["id"]
                                    ))

	    elseif params["deldhcp"]:
                sql = "update iplist set "
                sql += " ipaddress=%s"
                sql += ",hostname=%s"
                sql += ",macaddress=%s"
                sql += ",vlan=%s"
                sql += ",purpose=%s"
                sql += ",regdate=CURRENT_TIMESTAMP"
                sql += " where id = %s"
                db.con.execute(sql, (
                                        params["ipaddress"],
                                        params["hostname"],
                                        params["macaddress"],
                                        params["vlan"],
                                        params["purpose"],
                                        params["id"]
                                    ))

            else:
                sql = "update iplist set "
                sql += " ipaddress=%s"
                sql += ",hostname=%s"
                sql += ",macaddress=%s"
                sql += ",vlan=%s"
                sql += ",purpose=%s"
                sql += ",regdate=CURRENT_TIMESTAMP"
                sql += " where id = %s"
                db.con.execute(sql, (
                              		params["ipaddress"],
                                	params["hostname"],
                                	params["macaddress"],
                                	params["vlan"],
                                	params["purpose"],
                                	params["id"]
                                    ))

        else:

            sql = "insert into iplist (ipaddress, hostname, macaddress, vlan, purpose, regdate) values (%s, %s, %s, %s, %s, CURRENT_TIMESTAMP)"
            db.con.execute(sql, (
                                params["ipaddress"],
                                params["hostname"],
                                params["macaddress"],
                                params["vlan"],
                                params["purpose"]
				 ))

        db.dbhandle.commit()
        return


